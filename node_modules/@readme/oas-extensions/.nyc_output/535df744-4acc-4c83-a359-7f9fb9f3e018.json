{"/Users/erunion/code/readme/oas-extensions/src/index.ts":{"path":"/Users/erunion/code/readme/oas-extensions/src/index.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":269}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":0},"end":{"line":22,"column":8}},"11":{"start":{"line":39,"column":4},"end":{"line":49,"column":5}},"12":{"start":{"line":40,"column":8},"end":{"line":45,"column":9}},"13":{"start":{"line":41,"column":23},"end":{"line":41,"column":57}},"14":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"15":{"start":{"line":43,"column":16},"end":{"line":43,"column":39}},"16":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"17":{"start":{"line":47,"column":12},"end":{"line":47,"column":66}},"18":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":43}},"20":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"21":{"start":{"line":56,"column":19},"end":{"line":56,"column":47}},"22":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"23":{"start":{"line":58,"column":12},"end":{"line":58,"column":35}},"24":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"25":{"start":{"line":62,"column":8},"end":{"line":62,"column":56}},"26":{"start":{"line":64,"column":4},"end":{"line":64,"column":39}},"27":{"start":{"line":66,"column":0},"end":{"line":66,"column":36}},"28":{"start":{"line":79,"column":4},"end":{"line":94,"column":5}},"29":{"start":{"line":80,"column":19},"end":{"line":80,"column":47}},"30":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"31":{"start":{"line":82,"column":12},"end":{"line":82,"column":71}},"32":{"start":{"line":84,"column":8},"end":{"line":93,"column":9}},"33":{"start":{"line":85,"column":12},"end":{"line":92,"column":13}},"34":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"35":{"start":{"line":87,"column":20},"end":{"line":87,"column":105}},"36":{"start":{"line":90,"column":17},"end":{"line":92,"column":13}},"37":{"start":{"line":91,"column":16},"end":{"line":91,"column":103}},"38":{"start":{"line":96,"column":4},"end":{"line":106,"column":5}},"39":{"start":{"line":97,"column":19},"end":{"line":97,"column":59}},"40":{"start":{"line":98,"column":8},"end":{"line":105,"column":9}},"41":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"42":{"start":{"line":100,"column":16},"end":{"line":100,"column":94}},"43":{"start":{"line":103,"column":13},"end":{"line":105,"column":9}},"44":{"start":{"line":104,"column":12},"end":{"line":104,"column":92}},"45":{"start":{"line":108,"column":0},"end":{"line":108,"column":46}}},"fnMap":{"0":{"name":"getExtension","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":21}},"loc":{"start":{"line":38,"column":49},"end":{"line":65,"column":1}},"line":38},"1":{"name":"validateExtension","decl":{"start":{"line":78,"column":9},"end":{"line":78,"column":26}},"loc":{"start":{"line":78,"column":43},"end":{"line":107,"column":1}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":49,"column":5}},{"start":{"line":39,"column":4},"end":{"line":49,"column":5}}],"line":39},"1":{"loc":{"start":{"line":40,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":45,"column":9}},{"start":{"line":40,"column":8},"end":{"line":45,"column":9}}],"line":40},"2":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42},"3":{"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":69}},"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":20}},{"start":{"line":42,"column":24},"end":{"line":42,"column":48}},{"start":{"line":42,"column":52},"end":{"line":42,"column":69}}],"line":42},"4":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"5":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{"line":52,"column":4},"end":{"line":54,"column":5}}],"line":52},"6":{"loc":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},{"start":{"line":55,"column":4},"end":{"line":60,"column":5}}],"line":55},"7":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"8":{"loc":{"start":{"line":57,"column":12},"end":{"line":57,"column":65}},"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":16}},{"start":{"line":57,"column":20},"end":{"line":57,"column":44}},{"start":{"line":57,"column":48},"end":{"line":57,"column":65}}],"line":57},"9":{"loc":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},{"start":{"line":61,"column":4},"end":{"line":63,"column":5}}],"line":61},"10":{"loc":{"start":{"line":79,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":94,"column":5}},{"start":{"line":79,"column":4},"end":{"line":94,"column":5}}],"line":79},"11":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"12":{"loc":{"start":{"line":81,"column":12},"end":{"line":81,"column":76}},"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":36}},{"start":{"line":81,"column":40},"end":{"line":81,"column":59}},{"start":{"line":81,"column":63},"end":{"line":81,"column":76}}],"line":81},"13":{"loc":{"start":{"line":84,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":93,"column":9}},{"start":{"line":84,"column":8},"end":{"line":93,"column":9}}],"line":84},"14":{"loc":{"start":{"line":85,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":92,"column":13}},{"start":{"line":85,"column":12},"end":{"line":92,"column":13}}],"line":85},"15":{"loc":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},{"start":{"line":86,"column":16},"end":{"line":88,"column":17}}],"line":86},"16":{"loc":{"start":{"line":90,"column":17},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":17},"end":{"line":92,"column":13}},{"start":{"line":90,"column":17},"end":{"line":92,"column":13}}],"line":90},"17":{"loc":{"start":{"line":96,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":106,"column":5}},{"start":{"line":96,"column":4},"end":{"line":106,"column":5}}],"line":96},"18":{"loc":{"start":{"line":98,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":105,"column":9}},{"start":{"line":98,"column":8},"end":{"line":105,"column":9}}],"line":98},"19":{"loc":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":12},"end":{"line":101,"column":13}}],"line":99},"20":{"loc":{"start":{"line":103,"column":13},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":13},"end":{"line":105,"column":9}},{"start":{"line":103,"column":13},"end":{"line":105,"column":9}}],"line":103}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":11,"12":4,"13":2,"14":2,"15":1,"16":3,"17":1,"18":9,"19":1,"20":8,"21":2,"22":2,"23":1,"24":7,"25":1,"26":6,"27":1,"28":35,"29":19,"30":19,"31":3,"32":16,"33":16,"34":6,"35":3,"36":10,"37":5,"38":24,"39":16,"40":16,"41":6,"42":3,"43":10,"44":5,"45":1},"f":{"0":11,"1":35},"b":{"0":[4,7],"1":[2,2],"2":[1,1],"3":[2,2,2],"4":[1,2],"5":[1,8],"6":[2,6],"7":[1,1],"8":[2,2,1],"9":[1,6],"10":[19,16],"11":[3,16],"12":[19,18,17],"13":[16,0],"14":[6,10],"15":[3,3],"16":[5,5],"17":[16,8],"18":[6,10],"19":[3,3],"20":[5,5]},"inputSourceMap":{"version":3,"file":"file:///Users/erunion/code/readme/oas-extensions/src/index.ts","sources":["file:///Users/erunion/code/readme/oas-extensions/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-named-default\nimport type { default as Oas, Operation } from 'oas';\n\nexport const CODE_SAMPLES = 'code-samples';\nexport const EXPLORER_ENABLED = 'explorer-enabled';\nexport const HEADERS = 'headers';\nexport const PROXY_ENABLED = 'proxy-enabled';\nexport const SAMPLES_ENABLED = 'samples-enabled';\nexport const SAMPLES_LANGUAGES = 'samples-languages';\nexport const SEND_DEFAULTS = 'send-defaults';\nexport const SIMPLE_MODE = 'simple-mode';\n\n// Make sure you document any changes on here:\n// https://docs.readme.com/docs/openapi-extensions\nexport type Extensions = {\n  [CODE_SAMPLES]: {\n    language: string;\n    code: string;\n    name?: string;\n  };\n  [EXPLORER_ENABLED]: boolean;\n  [HEADERS]: Record<string, string | number>[];\n  [PROXY_ENABLED]: boolean;\n  [SAMPLES_ENABLED]: boolean; // @deprecated\n  [SAMPLES_LANGUAGES]: string[];\n  [SEND_DEFAULTS]: boolean; // @deprecated\n  [SIMPLE_MODE]: boolean;\n};\n\nexport const defaults: Extensions = {\n  [CODE_SAMPLES]: undefined,\n  [EXPLORER_ENABLED]: true,\n  [HEADERS]: undefined,\n  [PROXY_ENABLED]: true,\n  [SAMPLES_ENABLED]: true,\n  [SAMPLES_LANGUAGES]: ['shell', 'node', 'ruby', 'php', 'python', 'java', 'csharp'],\n  [SEND_DEFAULTS]: false,\n  [SIMPLE_MODE]: true,\n};\n\n/**\n * With one of our custom OpenAPI extensions, look for it in either an instance of `oas` or an\n * instance of the `Operation` class in `oas`.\n *\n * Our custom extensions can either be nestled inside of an `x-readme` object or at the root level\n * with an `x-` prefix.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n * @param operation An instsance of the `Operation` class from the `oas` library.\n * @returns Contents of the extension if found, otherwise the extensions default value.\n */\nexport function getExtension(extension: keyof Extensions, oas: Oas, operation?: Operation) {\n  if (operation) {\n    if (operation.hasExtension('x-readme')) {\n      const data = operation.getExtension('x-readme') as Extensions;\n      if (data && typeof data === 'object' && extension in data) {\n        return data[extension];\n      }\n    }\n\n    if (operation.hasExtension(`x-${extension}`)) {\n      return operation.getExtension(`x-${extension}`);\n    }\n  }\n\n  // Because our `code-samples` extension is intended for operation-level use, if it's instead\n  // placed at the OAS-level we should ignore it.\n  if (extension === CODE_SAMPLES) {\n    return defaults[extension];\n  }\n\n  if (oas.hasExtension('x-readme')) {\n    const data = oas.getExtension('x-readme') as Extensions;\n    if (data && typeof data === 'object' && extension in data) {\n      return data[extension];\n    }\n  }\n\n  if (oas.hasExtension(`x-${extension}`)) {\n    return oas.getExtension(`x-${extension}`);\n  }\n\n  return defaults[extension];\n}\n\n/**\n * With one of our custom OpenAPI extensions, determine if it's valid on a given instance of `oas`.\n *\n * @todo add support for validating on operations.\n *\n * @see {@link https://npm.im/oas}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#specificationExtensions}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#specificationExtensions}\n * @param extension Specification extension to lookup.\n * @param oas An instance of the `oas` library class.\n */\nexport function validateExtension(extension: keyof Extensions, oas: Oas) {\n  if (oas.hasExtension('x-readme')) {\n    const data = oas.getExtension('x-readme') as Extensions;\n    if (typeof data !== 'object' || Array.isArray(data) || data === null) {\n      throw new TypeError('\"x-readme\" must be of type \"Object\"');\n    }\n\n    if (extension in data) {\n      if ([CODE_SAMPLES, HEADERS, SAMPLES_LANGUAGES].includes(extension)) {\n        if (!Array.isArray(data[extension])) {\n          throw new TypeError(`\"x-readme.${extension}\" must be of type \"Array\"`);\n        }\n      } else if (typeof data[extension] !== 'boolean') {\n        throw new TypeError(`\"x-readme.${extension}\" must be of type \"Boolean\"`);\n      }\n    }\n  }\n\n  // If the extension isn't grouped under `x-readme`, we need to look for them with `x-` prefixes.\n  if (oas.hasExtension(`x-${extension}`)) {\n    const data = oas.getExtension(`x-${extension}`);\n    if ([CODE_SAMPLES, HEADERS, SAMPLES_LANGUAGES].includes(extension)) {\n      if (!Array.isArray(data)) {\n        throw new TypeError(`\"x-${extension}\" must be of type \"Array\"`);\n      }\n    } else if (typeof data !== 'boolean') {\n      throw new TypeError(`\"x-${extension}\" must be of type \"Boolean\"`);\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d61996030ec12fb7311dc7ef1a9af3cb53fe4af0","contentHash":"9104e894516e355bd08030ad0109bf2e5a692d73fa6685a7ead5917766d4075e"}}